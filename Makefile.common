# The common Makefile, read by all Makefiles in the subdirs

TOP := $(patsubst %/,%,$(dir $(lastword $(MAKEFILE_LIST))))

SRCPATH := $(TOP)/src
MAININCLUDE := $(TOP)/include

INCLUDES := -I$(MAININCLUDE) -I$(TOP)/external/include
LIBS := -L$(TOP)/external/lib \
		-lm \
		$(PLATFORM_LIBS)

# EXTRA_DEFINES are passed through the command line
DEFINES := $(PLATFORM_DEFINES) $(EXTRA_DEFINES)

DEBUG_FLAGS := #-O0 -g -ggdb #-DDEBUG 

CFLAGS := $(CFLAGS) $(DEFINES) $(PLATFORM_CFLAGS) \
		  $(DEBUG_FLAGS) $(INCLUDES) $(EXTRA_CFLAGS)
CFLAGSP := $(CFLAGS) -I$(MAININCLUDE) -I../extra/include -pthread

ifdef $(CCOMPILE)
C = $(CCOMPILE)
else
C = gcc
endif

CDEP = $(C)
AR = ar
LD = ld

DSTM_ARCHIVE:= $(TOP)/dtm.a

### Pretty output control ###
# Set up compiler and linker commands that either is quiet (does not print 
# the command line being executed) or verbose (print the command line). 
_C := $(C)
_CDEP := $(CDEP)
_LD := $(LD)
_AR := $(AR)

ifeq ($(V),1)
 override V_PREFIX :=
 override C = $(_C)
 override LD = $(_LD)
 override CDEP = $(_CDEP)
 override AR = $(_AR)
else
 override V_PREFIX := @
 override C = @echo      "\tCOMPILE         $<"; $(_C)
 override LD = @echo     "\tLINKING         $@"; $(_LD)
 override CDEP = @echo   "\tDEPGEN          $@"; $(_CDEP)
 override AR = @echo     "\tARCHIVE         $@ ($^)"; $(_AR)
endif
